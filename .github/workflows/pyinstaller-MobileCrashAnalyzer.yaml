name: Build
on:
  push:
    tags:
          - 'MMCA-v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # Mobile Crash Analyzer
  build-android:
    name: Mobile Crash Analyzer
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          apt -y install apksigner

      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare app for buildozer
        run: |
          REFNAME="${{ github.ref_name }}"
          echo "VERSION='${REFNAME}'" >src/shared/utils/version.py
          
          mkdir MonalMobileCrashAnalyzer_Deploy
          cp -av src/MobileCrashAnalyzer.py MonalMobileCrashAnalyzer_Deploy/MobileCrashAnalyzer.py
          cp -av src/MobileCrashAnalyzer MonalMobileCrashAnalyzer_Deploy/MobileCrashAnalyzer
          cp -av src/shared MonalMobileCrashAnalyzer_Deploy/shared

          cp -av src/MobileCrashAnalyzer.intent_filters.xml MonalMobileCrashAnalyzer_Deploy/MobileCrashAnalyzer.intent_filters.xml
          cp -av src/MobileCrashAnalyzer.spec MonalMobileCrashAnalyzer_Deploy/buildozer.spec
          echo "" >>MonalMobileCrashAnalyzer_Deploy/buildozer.spec
          echo "version = ${REFNAME#MMCA-v}" >>MonalMobileCrashAnalyzer_Deploy/buildozer.spec
          
          echo "import os" >MonalMobileCrashAnalyzer_Deploy/main.py
          echo "os.environ['KIVY_LOG_MODE'] = 'MIXED'" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "os.environ['KIVY_NO_FILELOG'] = '1'" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "from importlib import util" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "real_file = os.path.join(os.path.dirname(__file__), 'MobileCrashAnalyzer.pyc')" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "print('Proxy loading real file: %s' % real_file)" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "spec = util.spec_from_file_location('MobileCrashAnalyzer', real_file)" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "print(f'{spec = }')" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "mod = util.module_from_spec(spec)" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "# we don't want to add our module to sys.modules to not interfere with the package path having the same name" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "#(just like if our real_file was the real entry point)" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "print(f'{mod = }')" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "out = spec.loader.exec_module(mod)" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "print(f'{out = }')" >>MonalMobileCrashAnalyzer_Deploy/main.py
          echo "print('Proxied file returned, terminating...')" >>MonalMobileCrashAnalyzer_Deploy/main.py
          
          echo ""
          echo "buildozer.spec:"
          cat MonalMobileCrashAnalyzer_Deploy/buildozer.spec
          echo ""
          echo "main.py:"
          cat MonalMobileCrashAnalyzer_Deploy/main.py

      - name: Build with Buildozer
        uses: Sobottasgithub/buildozer-action@v1.1.3
        id: buildozer
        with:
          workdir: MonalMobileCrashAnalyzer_Deploy
          buildozer_version: stable

      - name: Sign Apk
        id: signer
        run: |
          apkinfile="${{ steps.buildozer.outputs.filename }}"
          apkoutfile="$HOME/signed-$(basename "${apkinfile}")"
          echo -n "${{ secrets.APK_SIGNING_KEY }}" >"$HOME/keystore.key"
          openssl enc -d -chacha20 -pbkdf2 -in src/release.keystore.enc -out "$HOME/release.keystore" -kfile "$HOME/keystore.key"
          cat "$HOME/keystore.key" | apksigner sign -ks "$HOME/release.keystore" -in "${apkinfile}" -out "${apkoutfile}"
          echo "unsigned_apk=${apkinfile}" >> "$GITHUB_OUTPUT"
          echo "signed_apk=${apkoutfile}" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: MobileCrashAnalyzer
          path: ${{ steps.signer.outputs.signed_apk }}
            
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    needs: build-android
    steps:
    - name: Load build artifacts
      uses: actions/download-artifact@v4
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref }}
        target_commitish: master
        generate_release_notes: true
        body: |
          New release
        files: |
          MobileCrashAnalyzer*/*
        fail_on_unmatched_files: true
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false